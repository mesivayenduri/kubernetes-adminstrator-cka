KUBEADM single node cluster:
============================
sudo su


sudo apt-get update
sudo apt-get install -y apt-transport-https ca-certificates curl



curl -fLo containerd-1.7.17-linux-amd64.tar.gz https://github.com/containerd/containerd/releases/download/v1.7.17/containerd-1.7.17-linux-amd64.tar.gz

tar Cxzvf /usr/local containerd-1.7.17-linux-amd64.tar.gz


sudo curl -fsSLo /etc/systemd/system/containerd.service https://raw.githubusercontent.com/containerd/containerd/main/containerd.service

systemctl daemon-reload

systemctl enable --now containerd


mkdir -p /opt/cni/bin

curl -fLo cni-plugins-linux-amd64-v1.4.1.tgz https://github.com/containernetworking/plugins/releases/download/v1.4.1/cni-plugins-linux-amd64-v1.4.1.tgz

tar Cxzvf /opt/cni/bin cni-plugins-linux-amd64-v1.4.1.tgz


mkdir /etc/containerd

containerd config default > /etc/containerd/config.toml

edit the file /etc/containerd/config.toml and update SystemdCgroup=true

systemctl restart containerd

curl -fsSLo runc.amd64 https://github.com/opencontainers/runc/releases/download/v1.1.12/runc.amd64
#curl -fsSLo runc.amd64  https://github.com/opencontainers/runc/releases/download/v1.1.3/runc.amd64
  
  
  
sudo install -m 755 runc.amd64 /usr/local/sbin/runc


sudo apt-get update

sudo apt-get install -y apt-transport-https ca-certificates curl gpg

###################################################### SINGLE COMMAND###########
cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
overlay
br_netfilter
EOF

sudo modprobe -a overlay br_netfilter

# sysctl params required by setup, params persist across reboots
cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-iptables  = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.ipv4.ip_forward                 = 1
EOF

# Apply sysctl params without reboot
sudo sysctl --system
######################################################


curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list

sudo apt-get update
sudo apt-get install -y kubelet kubeadm kubectl
sudo apt-mark hold kubelet kubeadm kubectl


swapon --show

sudo swapoff -a

sudo sed -i -e '/swap/d' /etc/fstab

sudo kubeadm init --pod-network-cidr=10.244.0.0/16

mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config


kubectl taint nodes --all node-role.kubernetes.io/control-plane:NoSchedule-

kubectl taint nodes --all node.kubernetes.io/not-ready:NoSchedule-

kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml




################################################################ UPGRADE PROCESS #######################################################

Provisioned v1.28.10 cluster in above steps:



echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list

curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

sudo apt-get update

sudo apt update

sudo apt-cache madison kubeadm


   kubeadm | 1.29.5-1.1 | https://pkgs.k8s.io/core:/stable:/v1.29/deb  Packages
   kubeadm | 1.29.4-2.1 | https://pkgs.k8s.io/core:/stable:/v1.29/deb  Packages
   kubeadm | 1.29.3-1.1 | https://pkgs.k8s.io/core:/stable:/v1.29/deb  Packages
   kubeadm | 1.29.2-1.1 | https://pkgs.k8s.io/core:/stable:/v1.29/deb  Packages
   kubeadm | 1.29.1-1.1 | https://pkgs.k8s.io/core:/stable:/v1.29/deb  Packages
   kubeadm | 1.29.0-1.1 | https://pkgs.k8s.io/core:/stable:/v1.29/deb  Packages

Now i want to upgrade my cluster to lastest patch version of 1.29 i.e 1.29.5-1.1

sudo apt-mark unhold kubeadm && \
sudo apt-get update && sudo apt-get install -y kubeadm='1.29.5-1.1' && \
sudo apt-mark hold kubeadm


kubeadm version

sudo kubeadm upgrade plan

kubeadm upgrade apply v1.29.5

kubectl drain controlplane --ignore-daemonsets


sudo apt-mark unhold kubelet kubectl && \
sudo apt-get update && sudo apt-get install -y kubelet='1.29.5-1.1' kubectl='1.29.5-1.1' && \
sudo apt-mark hold kubelet kubectl

sudo systemctl daemon-reload
sudo systemctl restart kubelet

kubectl uncordon controlplane

---------> Upgarding to 1.29.5 completed


####################################### Upgarding to 1.30 #######################################

echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list

curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

sudo apt-get update

sudo apt update

sudo apt-cache madison kubeadm


sudo apt-mark unhold kubeadm && \
sudo apt-get update && sudo apt-get install -y kubeadm='1.30.1-1.1' && \
sudo apt-mark hold kubeadm

kubeadm version

sudo kubeadm upgrade plan

kubeadm upgrade apply v1.30.1


sudo apt-mark unhold kubelet kubectl && \
sudo apt-get update && sudo apt-get install -y kubelet='1.30.1-1.1' kubectl='1.30.1-1.1' && \
sudo apt-mark hold kubelet kubectl

sudo systemctl daemon-reload
sudo systemctl restart kubelet

kubectl uncordon controlplane

---------> Upgarding to 1.30.1 completed